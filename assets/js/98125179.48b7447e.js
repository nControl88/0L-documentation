"use strict";(self.webpackChunk_0_l_documentation=self.webpackChunk_0_l_documentation||[]).push([[256],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var d=o.createContext({}),u=function(e){var t=o.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},p=function(e){var t=u(e.components);return o.createElement(d.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},s=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,d=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),s=u(r),m=n,k=s["".concat(d,".").concat(m)]||s[m]||c[m]||a;return r?o.createElement(k,l(l({ref:t},p),{},{components:r})):o.createElement(k,l({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,l=new Array(a);l[0]=s;var i={};for(var d in t)hasOwnProperty.call(t,d)&&(i[d]=t[d]);i.originalType=e,i.mdxType="string"==typeof e?e:n,l[1]=i;for(var u=2;u<a;u++)l[u]=r[u];return o.createElement.apply(null,l)}return o.createElement.apply(null,r)}s.displayName="MDXCreateElement"},8252:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var o=r(7462),n=(r(7294),r(3905));const a={},l="Validator Health & Sync",i={unversionedId:"node-ops/validator/upgrade",id:"node-ops/validator/upgrade",title:"Validator Health & Sync",description:"Follow the guide below to upgrade your node to 5.2.0",source:"@site/docs/node-ops/validator/upgrade.md",sourceDirName:"node-ops/validator",slug:"/node-ops/validator/upgrade",permalink:"/0L-documentation/docs/node-ops/validator/upgrade",draft:!1,editUrl:"https://github.com/nControl88/0l-documentation-source/tree/main/docs/node-ops/validator/upgrade.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"How to Configure Web Monitor Account Dictionary",permalink:"/0L-documentation/docs/node-ops/validator/guides/web_monitor_account_dictionary"}},d={},u=[{value:"Before you start",id:"before-you-start",level:2},{value:"Clean up database, rebuild from repository",id:"clean-up-database-rebuild-from-repository",level:2},{value:"Check node release",id:"check-node-release",level:2},{value:"Vote for upgrade",id:"vote-for-upgrade",level:2},{value:"Restore database",id:"restore-database",level:2},{value:"Backup and reinitialize node yaml",id:"backup-and-reinitialize-node-yaml",level:2},{value:"Restart your node",id:"restart-your-node",level:2},{value:"Check inbound connections",id:"check-inbound-connections",level:2},{value:"Remove monitor cache",id:"remove-monitor-cache",level:2},{value:"Restarting tower and monitor",id:"restarting-tower-and-monitor",level:2}],p={toc:u};function c(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,o.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"validator-health--sync"},"Validator Health & Sync"),(0,n.kt)("p",null,"Follow the guide below to upgrade your node to 5.2.0"),(0,n.kt)("h2",{id:"before-you-start"},"Before you start"),(0,n.kt)("p",null,"Stop your node, tower, and monitor, and make sure your env is up to date."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"sudo apt update; sudo apt upgrade\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"curl -sL https://raw.githubusercontent.com/OLSF/libra/main/ol/util/setup.sh | bash\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"cargo install toml-cli --force\n")),(0,n.kt)("h2",{id:"clean-up-database-rebuild-from-repository"},"Clean up database, rebuild from repository"),(0,n.kt)("p",null,"Remove the database. Get the latest files from the Libra repository and rebuild."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"cd ~ && rm -Rf ~/libra\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"git clone https://github.com/OLSF/libra.git\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"cd ~/libra\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"git fetch --all; git reset --hard HEAD; git checkout release-v5.2.0 --force; git pull\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"make bins install\n")),(0,n.kt)("h2",{id:"check-node-release"},"Check node release"),(0,n.kt)("p",null,"Check if you have the latest version v.5.2.0"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"diem-node --version\n")),(0,n.kt)("h2",{id:"vote-for-upgrade"},"Vote for upgrade"),(0,n.kt)("p",null,"If you agree with the proposal, vote for the upgrade."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"txs oracle-upgrade -v -h 2a8ae2cdd6f9cb941332d521380a681785f406af4e2b788da6132d46f7524172\n")),(0,n.kt)("h2",{id:"restore-database"},"Restore database"),(0,n.kt)("p",null,"#Let's get your db up to speed using the latest version snapshot."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"rm -Rf ~/.0L/db\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"ol restore -l\n")),(0,n.kt)("h2",{id:"backup-and-reinitialize-node-yaml"},"Backup and reinitialize node yaml"),(0,n.kt)("p",null,"Backup the node.yaml file and initialize the v5.2.0 unified yaml (for running in/out of set)."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"cp ~/.0L/validator.node.yaml ~/.0L/validator.node.yaml.bak\n")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"ol init --val\n")),(0,n.kt)("h2",{id:"restart-your-node"},"Restart your node"),(0,n.kt)("p",null,"Open or resume your tmux session and start your node."),(0,n.kt)("p",null,"Without log rotation (link):"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"RUST_LOG=error diem-node --config ~/.0L/validator.node.yaml\n")),(0,n.kt)("p",null,"With log rotation (link):"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"RUST_LOG=error diem-node --config ~/.0L/validator.node.yaml 2>&1 | multilog s104857600 n10 ~/.0L/logs/node\n")),(0,n.kt)("h2",{id:"check-inbound-connections"},"Check inbound connections"),(0,n.kt)("p",null,"Check to see if inbound Validator connections are > 20. If there are no or less connections, go back to ",(0,n.kt)("a",{parentName:"p",href:"#restore-database"},"Restore database")," and try again."),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"curl localhost:9102/metrics\n")),(0,n.kt)("h2",{id:"remove-monitor-cache"},"Remove monitor cache"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"rm -Rf ~/.0L/monitor_cache.json\n")),(0,n.kt)("h2",{id:"restarting-tower-and-monitor"},"Restarting tower and monitor"),(0,n.kt)("p",null,"Start your tower and monitor once again. For the purpose of monitoring sync, ",(0,n.kt)("inlineCode",{parentName:"p"},"ol health")," checks and the web monitor, it is suggested to use an upstream_node other than your own ",(0,n.kt)("inlineCode",{parentName:"p"},"localhost/127.0.0.1"),"."))}c.isMDXComponent=!0}}]);